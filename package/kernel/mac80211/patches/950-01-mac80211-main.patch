--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -32,6 +32,9 @@
 #include "wep.h"
 #include "led.h"
 #include "debugfs.h"
+
+static struct timer_list pkt_timer;
+void pkt_timer_callback(unsigned long data);
 
 void ieee80211_configure_filter(struct ieee80211_local *local)
 {
@@ -1204,6 +1207,15 @@
 {
 	struct sk_buff *skb;
 	int ret;
+	int t;
+
+    // Create a timer to use for packet outs, etc.
+	printk(KERN_INFO "Mac80211_main: Loading Module\n");
+    setup_timer(&pkt_timer, pkt_timer_callback, 0 );
+    printk(KERN_INFO "Mac80211_main: Starting PKT timer (%ld)\n", jiffies );
+    t = mod_timer(&pkt_timer, jiffies + msecs_to_jiffies(5000));
+    if (t) printk(KERN_INFO "Mac80211_main: unable set PKT timer\n");
+    // End
 
 	BUILD_BUG_ON(sizeof(struct ieee80211_tx_info) > sizeof(skb->cb));
 	BUILD_BUG_ON(offsetof(struct ieee80211_tx_info, driver_data) +
@@ -1230,6 +1242,17 @@
 	return ret;
 }
 
+// Packet timer call back
+void pkt_timer_callback(unsigned long data)
+{
+	int t;
+	ieee80211_packet_out_skb();
+
+	t = mod_timer(&pkt_timer, jiffies + msecs_to_jiffies(500));     //reset timer
+	if (t) printk(KERN_INFO "Mac80211_main: unable reset PKT timer\n");
+}
+// end
+
 static void __exit ieee80211_exit(void)
 {
 	rc80211_minstrel_ht_exit();
