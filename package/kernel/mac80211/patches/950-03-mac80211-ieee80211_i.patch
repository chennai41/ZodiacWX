--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -13,6 +13,16 @@
 #ifndef IEEE80211_I_H
 #define IEEE80211_I_H
 
+#define ETH_PORT_NO 65
+#define FIRST_WLAN1_PORT 32
+#define PACKET_BUFFER 36
+#define MAX_OUTPUTS      65
+
+// nnOpenflow return codes
+#define OFPP13_NORMAL   0xFFFFFFFA
+#define OFPP13_FLOOD	0xFFFFFFFB
+#define NN_PORT_DROP	0xFFFFFF00
+ 
 #include <linux/kernel.h>
 #include <linux/device.h>
 #include <linux/if_ether.h>
@@ -2061,6 +2071,26 @@
 void ieee80211_teardown_tdls_peers(struct ieee80211_sub_if_data *sdata);
 void ieee80211_tdls_chsw_work(struct work_struct *wk);
 
+void ieee80211_packet_out_skb(void);
+void ieee80211_output_skb(struct sk_buff *skb, struct net_device *dev, u8 outport);
+void ieee80211_packet_out_subif_start_xmit(struct sk_buff *skb, struct net_device *dev, u32 info_flags);
+
+// Packet Out pointers
+struct packet_out
+{
+    u32 inport;
+    u32 outport;
+    struct sk_buff *skb; 
+    struct net_device *dev;
+};
+
+struct output_list
+{
+    u32 outport[MAX_OUTPUTS];
+    struct sk_buff *skb[MAX_OUTPUTS]; 
+    struct net_device *dev[MAX_OUTPUTS];
+};
+
 extern const struct ethtool_ops ieee80211_ethtool_ops;
 
 #ifdef CONFIG_MAC80211_NOINLINE
