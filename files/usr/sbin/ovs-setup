#!/bin/sh
OVS_BR=ovslan
#IP Controller, Port for OvS Manager, Linux Bridge
IP_CONTROLLER=192.168.1.136
PORT_CONTROLLER=6633
echo -e "\033[0;32m Declare Necessary Variable Successful"
# Add Bridge Open vSwitch
ovs-vsctl --may-exist add-br $OVS_BR
echo -e "\033[0;32m Add OvS Bridge $OVS_BR Succesful"
sleep 2
# Add Port to Bridge
for i in eth0.1 wlan0
do
  ovs-vsctl --may-exist add-port $OVS_BR $i
  echo -e "\033[0;32m Add OvS Port $i to $OVS_BR successful"
  sleep 1
done
# Up The Interface
for i in eth0.1 wlan0 ovslan
do
  ifconfig $i up
  echo -e "\033[0;32m Up interface $i"
  sleep 1
done
#Set All Options Necessary for Controller
ovs-vsctl set bridge $OVS_BR stp_enable=true
echo -e "\033[0;32m Set STP Enabled True in $OVS_BR Successful"
sleep 1
ovs-vsctl set-controller $OVS_BR tcp:$IP_CONTROLLER:$PORT_CONTROLLER
echo -e "\033[0;32m Set IP:$IP_CONTROLLER as Controller in $OVS_BR and Successful"
sleep 1
ovs-vsctl set-fail-mode $OVS_BR standalone
echo -e "\033[0;32m Set Standalone Mode in $OVS_BR and Successful"
sleep 1
#ovs-ofctl del-flows $OVS_BR
#echo -e "\033[0;32m Delete Previous Flows in $OVS_BR and Successful"
#sleep 1
echo -e "\033[0;32m Restart Network Service. . . . . . "
/etc/init.d/network restart
echo -e "\033[0;32m Restart Network Service Successful"
# Check Result
echo -e "\033[0;32m Result : "
ovs-vsctl show
echo " "
#reboot
exit 0